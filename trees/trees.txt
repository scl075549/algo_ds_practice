Trees are used in many areas of computer science, including operating
systems, graphics, database systems, and computer networking.

Tree data structures have much in common with their botanical cousins: A tree
data structure has a root, branches, and leaves. The difference between a CS
tree and a real live tree is that a tree data structure has its root at the
top and its leaves on the bottom.

Properties of trees:
    - Hierarchical: Trees are structured in layers with the more general
    things near the top and the more specific things near the bottom.
        ex. Biological classification tree:
            - Top of the hierarchy is Kingdom
            - The next layer of the tree ('children' of the layer above) is
            the Phylum, then Class, Order, etc. etc.
            However, no matter how deep we go in the classification tree, all
            organisms are still animals

    - All of the children of one node are independent of the children of
    another node

    - Each leaf node is unique --> we can specify a path from the root of the
    tree to a leaf that uniquely identifies each species in the animal
    kingdom.
        ex. Animalia --> Chordate --> Mammal --> Carnivora --> Felidae -->
        Felis --> Domestica

    Another example of a tree structure that you probably use every day is a
    file system. In a file system, directories, or folders, are structured as
    a tree.

    The file system tree has much in common with the biological
    classification tree. You can follow a path from the root to any
    directory. That path will uniquely identify that subdirectory (and all
    the files in it)

    - You can move entire sections of a tree (called a subtree) to a
    different position in the tree without affecting the lower levels of the
    hierarchy.
        ex. Take the entire directory '/etc/', detach it from the root, and
        reattach it under '/usr/'. This would change the unique pathname of a
        directory 'httpd' from /etc/httpd to /usr/etc/httpd, but would not
        affect the contents or any children of the httpd directory.

    Final example of a tree is a web page --> HTML source code --> each
    successive level of the tree corresponds to a level of nesting inside the
    HTML tags.
